%note
=Note=
日期: 2012-06-05 20:06

==四类变量==

| 标量   | $  |
| 数组   | @  |
| 散列   | %  |
| 子例程 | ＆ |
| 类型团 | *  |

==将列表作为标量==
{{{ class="brush:perl"
  %wife;
  $wife{"Jacob"}=("Leah","Rachel",'Bilhah',"Zilpah");#错，列表无法转换成标量
  $wife{"Jacob"}=["Leah","Rachel",'Bilhah',"Zilpah"];#对，创建未命名数组，在标量环境中返回引用
  }}}
  
==赋值时有趣的例子==
{{{ class="brush:perl"
    $line .= "\n";   # 给 $line 附加一个新行
    $fill x=80;      # 把字串变成自填充 80 遍
    $val ||= "2";    # 如果 $val 不为真则把它设置为 2
    
    #和c的不同
    #c中返回值作为赋值表达式的值
    #perl中返回实际的变量作为赋值表达式的值
	($temp -= 32) *= 5/9;
  }}}

==逻辑操作符==
* && || !     比逗号优先级高
* and or not xor   比逗号优先级低
* 效果一样，优先级不同

==比较操作符==
| 比较       | 数字 | 字串 | 返回值                                    |        |
|------------+------+------+-------------------------------------------+--------|
| 等于       | ==   | eq   | 如果 $a 等于 $b                           | 返回真 |
| 不等于     | =    | ne   | 如果 $a 不等于 $b                         | 返回真 |
| 小于       | <    | lt   | 如果 $a 小于 $b                           | 返回真 |
| 大于       | >    | gt   | 如果 $a 大于 $b                           | 返回真 |
| 小于或等于 | <=   | le   | 如果 $a 不大于 $b                         | 返回真 |
| 比较       | <=>  | cmp  | 相等时为 0,如果 $a 大为 1 如果 $b 大为 -1 |        |

==文件测试==
| 例子  | 名字     | 结果                                   |
|-------+----------+----------------------------------------|
| -e $a | 存在     | 如果在 $a 中命名的文件存在则为真       |
| -r $a | 可读     | 如果在 $a 中命名的文件可读则为真       |
| -w $a | 可写     | 如果在 $a 中命名的文件可写则为真       |
| -d $a | 目录     | 如果在 $a 中命名的文件是目录则为真     |
| -f $a | 文件     | 如果在 $a 中命名的文件是普通文件则为真 |
| -T $a | 文本文件 | 如果在 $a 中命名的文件是文本文件则为真 |

{{{ class="brush:perl"
  -e "/home/$user" or warn "The home dir of user $user doesn't exist.";
  }}}
  
==正则表达式==
* 反向引用
{{{ class="brush:perl"
  $html_code = "<B>Bold</B>";
  $html_code =~ /<(.*?)>.*?<\/\1>/;
  #注意后面的\1, 它保证了两个标签相同，在这里都是B
  }}}
