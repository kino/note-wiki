%title perl函数
=perl函数=
日期: 2012-06-04 16:06
%toc

# 定义一个子程序：
  {{{ class="brush:perl"
      sub marine {
          $n += 1; #全局变量$n
          print "Hello, sailor number $n!\";
      }
	}}}
# 子程序定义是全局的，可以在任何地方定义。
# 没有私有的子程序，如果有两个同名的子程序同时存在，后面的一个将覆盖前面一个定义。
# 通过&调用子程序
  {{{ class="brush:perl"
      &marine;
	}}}
# 子程序的返回值是最后一个被计算的表达式。
# 如果向子程序传递参数，参数将存储在列表@_中。
  * @_是子程序中的私有变量，不会影响到全局中的@_。
  * 如果有一个全局变量@_，在调用子程序前会存储起来，调用完后再还回去。
  * 如果使用&调用子程序，且没有使用()传递参数，如果这时在子程序中使用@_，就是使用的全局@_。但不见意这样做！
# 可以使用my创建私有变量，创建的这些变量只在当前代码块中有用。默认情况下变量都是全局的。
  {{{ class="brush:perl"
      my($m,$n)
	}}}
# 如果子程序声明在前，调用在后，调用时可以省略&。但如果有内嵌的函数重名，则不能省略。
  {{{ class="brush:perl"
      sub division{
          $_[0] / $_[1]; #第一个参数除以第二个参数
      }
      my $quotient = division 355, 113; #可以省略掉括号
	}}}
# 子程序的返回值可以是标量，也可以是列表。



